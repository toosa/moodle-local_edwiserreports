{"version":3,"sources":["block_courseprogress.js"],"names":["define","$","Chart","cfg","V","common","init","invalidUser","cpGraph","panel","getPanel","panelBody","selectedCourse","chart","loader","cpBlockData","form","getCourseProgressData","courseId","val","find","destroy","show","ajax","url","requestUrl","type","requestType","dataType","requestDataType","data","action","secret","M","local_edwiserreports","JSON","stringify","courseid","done","response","error","exception","errorcode","graph","fail","always","labels","datasets","label","backgroundColor","ctx","options","hide","fadeIn","getCourseProgressBlock","select2","on"],"mappings":"AAAA,aA0BAA,OAAO,CAAC,SAAU,eAAgB,qCAAsC,iCAAkC,WAAY,gCAAiC,SAAUC,EAAGC,EAAOC,EAAKC,EAAGC,GAiGjL,MAAO,CACLC,KA7FF,SAAcC,GACZ,IAAIC,EAAU,KACVC,EAAQN,EAAIO,SAAS,wBACrBC,EAAYR,EAAIO,SAAS,uBAAwB,QACjDE,EAAiBD,EAAY,8BAC7BE,EAAQF,EAAY,aACpBG,EAASH,EAAY,WACrBI,GAAc,EACdC,EAAOf,EAAEQ,EAAQ,wBAqBrB,SAASQ,IACP,IAAIC,EAAWjB,EAAEW,GAAgBO,MACjCH,EAAKI,KAAK,wBAAwBD,IAAID,GAElCV,GACFA,EAAQa,UAIVhB,EAAOS,OAAOQ,KAAK,wBACnBrB,EAAEsB,KAAK,CACLC,IAAKrB,EAAIsB,WACTC,KAAMvB,EAAIwB,YACVC,SAAUzB,EAAI0B,gBACdC,KAAM,CACJC,OAAQ,qCACRC,OAAQC,EAAEC,qBAAqBF,OAC/BF,KAAMK,KAAKC,UAAU,CACnBC,SAAUnB,OAGboB,KAAK,SAAUC,IACO,IAAnBA,EAASC,OAAmD,qBAAjCD,EAASE,UAAUC,UAKlD3B,EAAY4B,MAAMb,KAAOS,EAAST,KAJhCvB,EAAY,sBAAuBgC,KAKpCK,KAAK,SAAUJ,MACfK,OAAO,WAcZ,IAEMf,EAAAA,EAAO,CACTgB,OAAQ/B,EAAY4B,MAAMG,OAC1BC,SAAU,CAAC,CACTC,MAAOjC,EAAY4B,MAAMK,MACzBlB,KAAMf,EAAY4B,MAAMb,KACxBmB,gBAAiBlC,EAAY4B,MAAMM,mBApBrCzC,EAwBK,IAAIN,EAAMa,EAAYmC,IAAK,CAChCpB,KAAMA,EACNJ,KAAMX,EAAY4B,MAAMjB,KACxByB,QAASpC,EAAY4B,MAAMQ,UA1B3BlD,EAAEa,GAAQsC,OACVnD,EAAEY,GAAOwC,OAAO,QAEhBhD,EAAOS,OAAOsC,KAAK,2BAlDvBrC,EAAcZ,EAAImD,4BAGhBrC,IACAhB,EAAEU,EAAY,kBAAkB4C,UAChCtD,EAAEW,GAAgB4C,GAAG,SAAU,WAC7BvD,EAAEY,GAAOuC,OACTnD,EAAEa,GAAQQ,OACVL","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Plugin administration pages are defined here.\n *\n * @package     local_edwiserreports\n * @copyright   2021 wisdmlabs <support@wisdmlabs.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n/* eslint-disable no-console */\ndefine([\n    'jquery',\n    'core/chartjs',\n    'local_edwiserreports/defaultconfig',\n    'local_edwiserreports/variables',\n    './common',\n    'local_edwiserreports/select2'\n], function($, Chart, cfg, V, common) {\n\n    /**\n     * Initialize\n     * @param {function} invalidUser Callback function\n     */\n    function init(invalidUser) {\n        var cpGraph = null;\n        var panel = cfg.getPanel(\"#courseprogressblock\");\n        var panelBody = cfg.getPanel(\"#courseprogressblock\", \"body\");\n        var selectedCourse = panelBody + \" #wdm-courseprogress-select\";\n        var chart = panelBody + \" .ct-chart\";\n        var loader = panelBody + \" .loader\";\n        var cpBlockData = false;\n        var form = $(panel + ' form.download-links');\n\n        /**\n         * Generate course progress block\n         */\n        cpBlockData = cfg.getCourseProgressBlock();\n\n        // If course progress block is there\n        if (cpBlockData) {\n            getCourseProgressData();\n            $(panelBody + ' .singleselect').select2();\n\n            $(selectedCourse).on(\"change\", function() {\n                $(chart).hide();\n                $(loader).show();\n\n                getCourseProgressData();\n            });\n        }\n\n        /**\n         * Get progress data through ajax\n         */\n        function getCourseProgressData() {\n            var courseId = $(selectedCourse).val();\n            form.find('input[name=\"filter\"]').val(courseId);\n\n            // If progress graph already exist then destroy\n            if (cpGraph) {\n                cpGraph.destroy();\n            }\n\n            // Show loader.\n            common.loader.show('#courseprogressblock');\n\n            $.ajax({\n                url: cfg.requestUrl,\n                type: cfg.requestType,\n                dataType: cfg.requestDataType,\n                data: {\n                    action: 'get_courseprogress_graph_data_ajax',\n                    secret: M.local_edwiserreports.secret,\n                    data: JSON.stringify({\n                        courseid: courseId\n                    })\n                },\n            })\n            .done(function(response) {\n                if (response.error === true && response.exception.errorcode === 'invalidsecretkey') {\n                    invalidUser('courseprogressblock', response);\n                    return;\n                }\n                cpBlockData.graph.data = response.data;\n            })\n            .fail(function(error) {\n                // console.log(error);\n            })\n            .always(function() {\n                cpGraph = generateCourseProgressGraph();\n                $(loader).hide();\n                $(chart).fadeIn(\"slow\");\n\n                // Hide loader.\n                common.loader.hide('#courseprogressblock');\n            });\n        }\n\n        /**\n         * Generate course progress graph.\n         * @returns {Object} chart object\n         */\n        function generateCourseProgressGraph() {\n            // Create configuration data for course progress block\n            var data = {\n                labels: cpBlockData.graph.labels,\n                datasets: [{\n                    label: cpBlockData.graph.label,\n                    data: cpBlockData.graph.data,\n                    backgroundColor: cpBlockData.graph.backgroundColor\n                }]\n            };\n\n            // Return chart object\n            return new Chart(cpBlockData.ctx, {\n                data: data,\n                type: cpBlockData.graph.type,\n                options: cpBlockData.graph.options\n            });\n        }\n    }\n\n    // Must return the init function\n    return {\n        init: init\n    };\n});\n"],"file":"block_courseprogress.min.js"}